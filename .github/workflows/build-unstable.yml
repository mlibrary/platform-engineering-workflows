name: Build unstable image

on:
  workflow_call: 
    inputs:
      docker_context: 
        type: string
        default: "."
        required: false
      dockerfile:
        type: string
        default: Dockerfile.prod
        required: false
      image_name:
        type: string
        required: true
        description: The base name of the image.
      tag: 
        description: tag or commit sha
        required: false
        type: string
    secrets:
      GH_PACKAGE_READ_TOKEN:
        required: true
    outputs:
      sha:
        description: "github commit hash that corressponds to the tag"
        value: ${{ jobs.build_unstable.outputs.sha }}
      image:
        description: "full image address"
        value: ${{ jobs.build_unstable.outputs.image }}

jobs:
  build_unstable:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.tag_check.outputs.tag }}
      image: ${{ steps.image_check.outputs.image }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Check that the tag exists in repo
      env: 
        TAG: ${{ inputs.tag }}
      id: tag_check
      run: |
        if [ -z $TAG ]; then
          echo "tag=`git rev-parse HEAD`" >> $GITHUB_OUTPUT
        elif git rev-parse "refs/tags/$TAG" &> /dev/null; then
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        elif git rev-parse "$TAG" &> /dev/null; then
          SHA=`git rev-parse "$TAG"`
          echo "$TAG corresponds to $SHA"
          echo "tag=$SHA" >> $GITHUB_OUTPUT
        else
          echo "Couldn't figure out tag from input: $TAG"
          echo "Aborting deployment."
          false
        fi
    - name: Log into Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Check that the tag exists in container registry
      id: image_check
      env:
        IMAGE: ghcr.io/mlibrary/${{ inputs.image_name }}-unstable:${{ steps.tag_check.outputs.tag }}
      run: |
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
        if docker manifest inspect $IMAGE > /dev/null; then
          echo "image_exists=true" >> $GITHUB_OUTPUT
          echo "image exists!"
        else
          echo "image doesn't exist; Starting to Build and push image"
        fi
    - name: Checkout Correct repository
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.tag_check.outputs.tag }}
    - name: Build and Push
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.dockerfile }}
        secrets: |
          "gh_package_read_token=${{ secrets.GH_PACKAGE_READ_TOKEN }}"
        push: true
        tags: | 
           ghcr.io/mlibrary/${{ inputs.image_name }}-unstable:latest
           ${{ steps.image_check.outputs.image }}
