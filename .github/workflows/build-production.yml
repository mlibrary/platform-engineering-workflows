name: Build production image

on:
  workflow_call: 
    inputs:
      docker_context: 
        type: string
        default: "."
        required: false
      dockerfile:
        type: string
        default: Dockerfile.prod
        required: false
      image_name:
        type: string
        required: true
        description: The base name of the image.
      tag: 
        description: tag
        required: true
        type: string
    secrets:
      GH_PACKAGE_READ_TOKEN:
        required: true

jobs:
  build_production:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check that the tag exists in repo
      id: tag_check
      run: |
        if git rev-parse 'refs/tags/${{ inputs.tag }}' &> /dev/null; then
          echo 'tag=${{ inputs.tag }}' >> $GITHUB_OUTPUT
        else
          echo "Couldn't figure out tag from input: ${{ inputs.tag }}"
          echo "Aborting deployment."
          false
        fi
    - name: Log into Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Check that the tag exists in container registry
      id: image_check
      run: |
        if docker manifest inspect ghcr.io/mlibrary/${{ inputs.image_name }}:${{ steps.tag_check.outputs.tag }} > /dev/null; then
          echo 'image_exists=true' >> $GITHUB_OUTPUT
          echo "image exists!"
        else
          echo "image doesn't exist; Starting to Build and push image"
        fi
    - name: Checkout Correct repository
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.tag_check.outputs.tag }}
    - name: Build and Push
      if: ${{ steps.image_check.outputs.image_exists != 'true' }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.dockerfile }}
        secrets: |
          "gh_package_read_token=${{ secrets.GH_PACKAGE_READ_TOKEN }}"
          "github_token=${{ secrets.GITHUB_TOKEN }}"
        push: true
        tags: | 
           ghcr.io/mlibrary/${{ inputs.image_name }}:latest
           ghcr.io/mlibrary/${{ inputs.image_name }}:${{ steps.tag_check.outputs.tag }}
